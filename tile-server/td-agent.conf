# General Apache2 Access Log
<source>
        type tail
        path /var/log/apache2/access.log
        pos_file /var/log/td-agent/apache2/access.log.pos
        tag apache.access
        format apache2
</source>

# Apache2 Tiles Access Log
<source>
        type tail
        path /var/log/apache2/tiles_access.log
        pos_file /var/log/td-agent/apache2/tiles_access.log.pos
        tag apache.tiles.access
        format apache2
</source>

# Apache2 Tiles Error Log
<source>
        type tail
        path /var/log/apache2/tiles_error.log
        pos_file /var/log/td-agent/apache2/tiles_error.log.pos
        tag apache.tiles.error
        format /^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])? \[client (?<host>[^:]*):\d+\] (?<message>.*)$/
</source>

# Filter Tile Error Log types
<match apache.tiles.error>
        type rewrite_tag_filter
        rewriterule1 level ^tile:info$  apache.tiles.info
        rewriterule2 level ^tile:warn$  apache.tiles.warn
        rewriterule3 level .+           apache.tiles.unknown
</match>

# Separate tile info types
<match apache.tiles.info>
        type rewrite_tag_filter
        rewriterule1 message ^tile_storage_hook: .+$    apache.tiles.info.cache
        rewriterule2 message ^Requesting style.+$       apache.tiles.info.generate
        rewriterule3 message .+                         apache.tiles.info.unknown
</match>

# Parse more fields from tile cache logs
<match apache.tiles.info.cache>
        type parser
        tag apache.tiles.info.cache.parsed
        format /^tile_storage_hook: handler\((?<handler>[^\)]*)\), uri\((?<path>[^\)]*)\), referer:(?<referer>.*)$/
        key_name message
        reserve_data yes
</match>

<match apache.tiles.info.cache.parsed>
        type parser
        tag apache.tiles.info.cache.parsed.path
        format /^\/(?<style>[^\/]*)\/(?<zoom>[^\/]*)\/(?<x>[^\/]*)\/(?<y>[^.]*)\.png$/
        key_name path
        reserve_data yes
</match>

# Parse more fields from tile generate logs
<match apache.tiles.info.generate>
        type parser
        tag apache.tiles.info.generate.parsed
        format /^Requesting style\((?<style>[^\)]*)\) z\((?<zoom>[^\)]*)\) x\((?<x>[^\)]*)\) y\((?<y>[^\)]*)\) from renderer with priority (?<priority>\d+), referer: (?<referer>.*)$/
        key_name message
        reserve_data yes
</match>

# Add tile location
<match apache.tiles.info.cache.parsed.path>
        type tile_location_filter
        tile_x_key x
        tile_y_key y
        tile_zoom_key zoom
        tile_style_key style
        tag apache.tiles.info.cache.parsed.path.located
</match>

<match apache.tiles.info.generate.parsed>
        type tile_location_filter
        tile_x_key x
        tile_y_key y
        tile_zoom_key zoom
        tile_style_key style
        tag apache.tiles.info.generate.parsed.located
</match>

<match fluent.*>
  type null
</match>

# Send Data to Logging Fluentd
<match **>
        type secure_forward
        self_hostname THIS HOST #FIXME
        shared_key test
        secure yes
        ca_cert_path /etc/td-agent/ca_cert.pem
        enable_strict_verification yes
        <server>
            # ADD LOG HOST
        </server>
</match>
