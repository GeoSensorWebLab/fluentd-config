####
## Source descriptions:
##

## built-in TCP input
## @see http://docs.fluentd.org/articles/in_forward
# <source>
#   type forward
# </source>

## built-in UNIX socket input
#<source>
#  type unix
#</source>

# HTTP input
# POST http://localhost:8888/<tag>?json=<json>
# POST http://localhost:8888/td.myapp.login?json={"user"%3A"me"}
# @see http://docs.fluentd.org/articles/in_http
# <source>
#   type http
#   port 8888
# </source>

## live debugging agent
# <source>
#   type debug_agent
#   bind 127.0.0.1
#   port 24230
# </source>

# General Apache2 Access Log
<source>
	type tail
	path /var/log/apache2/access.log
	pos_file /var/log/td-agent/apache2/access.log.pos
	tag apache.access
	format apache2
</source>

# Apache2 Tiles Access Log
<source>
	type tail
	path /var/log/apache2/tiles_access.log
	pos_file /var/log/td-agent/apache2/tiles_access.log.pos
	tag apache.tiles.access
	format apache2
</source>

# Apache2 Tiles Error Log
<source>
	type tail
	path /var/log/apache2/tiles_error.log
	pos_file /var/log/td-agent/apache2/tiles_error.log.pos
	tag apache.tiles.error
	format /^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])? \[client (?<host>[^:]*):\d+\] (?<message>.*)$/
</source>

# Filter Tile Error Log types
<match apache.tiles.error>
	type rewrite_tag_filter
	rewriterule1 level ^tile:info$	apache.tiles.info
	rewriterule2 level ^tile:warn$	apache.tiles.warn
	rewriterule3 level .+		apache.tiles.unknown
</match>

# Separate tile info types
<match apache.tiles.info>
	type rewrite_tag_filter
	rewriterule1 message ^tile_storage_hook: .+$	apache.tiles.info.cache
	rewriterule2 message ^Requesting style.+$	apache.tiles.info.generate
	rewriterule3 message .+				apache.tiles.info.unknown
</match>

# Parse more fields from tile cache logs
<match apache.tiles.info.cache>
	type parser
	tag apache.tiles.info.cache.parsed
	format /^tile_storage_hook: handler\((?<handler>[^\)]*)\), uri\((?<path>[^\)]*)\), referer:(?<referer>.*)$/
	key_name message
	reserve_data yes
</match>

<match apache.tiles.info.cache.parsed>
	type parser
	tag apache.tiles.info.cache.parsed.path
	format /^\/(?<style>[^\/]*)\/(?<zoom>[^\/]*)\/(?<x>[^\/]*)\/(?<y>[^.]*)\.png$/
	key_name path
	reserve_data yes
</match>

# Parse more fields from tile generate logs
<match apache.tiles.info.generate>
	type parser
	tag apache.tiles.info.generate.parsed
	format /^Requesting style\((?<style>[^\)]*)\) z\((?<zoom>[^\)]*)\) x\((?<x>[^\)]*)\) y\((?<y>[^\)]*)\) from renderer with priority (?<priority>\d+), referer: (?<referer>.*)$/
	key_name message
	reserve_data yes
</match>

# Add tile location
<match apache.tiles.info.cache.parsed.path>
	type tile_location_filter
	tile_x_key x
	tile_y_key y
	tile_zoom_key zoom
	tile_style_key style
	tag apache.tiles.info.cache.parsed.path.located
</match>

<match apache.tiles.info.generate.parsed>
	type tile_location_filter
	tile_x_key x
	tile_y_key y
	tile_zoom_key zoom
	tile_style_key style
	tag apache.tiles.info.generate.parsed.located
</match>

# Renderd Log
<source>
	type tail
	path /var/log/renderd.log
	pos_file /var/log/td-agent/renderd.log.pos
	tag renderd
	format /^(?<message>.+)?$/
</source>

# Separate renderd log
<match renderd>
	type rewrite_tag_filter
	rewriterule1 message ^renderd\[(?<pid>\d+)\]: DEBUG: DONE TILE .+$	renderd.debug.done
	rewriterule2 message ^renderd\[(?<pid>\d+)\]: DEBUG: .+$	renderd.debug.other
	rewriterule3 message .+			 renderd.other
</match>

# Parse more fields from renderd debug logs
<match renderd.debug.done>
	type parser
	tag renderd.debug.done.parsed
	format /^renderd\[(?<pid>\d+)\]: DEBUG: DONE TILE (?<style>\w+) (?<zoom_level>\d+) \d+-\d+ \d+-\d+ in (?<render_time>\d+.\d+) seconds$/
	key_name message
	reserve_data yes
	types render_time:float,zoom_level:integer
</match>

<match fluent.*>
  type null
</match>

# Send Data to Logging Fluentd
<match **>
	type secure_forward
	self_hostname gsw-data.geocens.ca
	shared_key test
	secure yes
	ca_cert_path /etc/td-agent/ca_cert.pem
	enable_strict_verification yes
	<server>
		host logs.geocens.ca
	</server>
</match>
